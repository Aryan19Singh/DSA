class Solution {
public:
    int minEatingSpeed(vector<int>& piles, int h) {
        int low = 1;
        int high = *max_element(piles.begin(), piles.end());

        while (low < high) {
            int mid = (high + low) / 2;
            int totalHours = 0;
            
            for (int i = 0; i < piles.size(); i++) {
                totalHours += piles[i]/ mid;
                if( piles[i] % mid  != 0){
                    totalHours++;
                }
                                                   }
            if (totalHours <= h) {
                high = mid;
            } else {
                low = mid + 1;
            }
        }

        return low;
    }
};

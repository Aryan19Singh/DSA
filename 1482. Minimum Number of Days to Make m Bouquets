class Solution {
public:

bool possible(vector<int>& bloomDay, int day,int m,int k){
    int count=0;
    int NoBouq=0;
    for(int i=0;i<bloomDay.size();i++){
        if(bloomDay[i]<=day){
            count++;
        }else{
            NoBouq+=(count/k);
            count=0;
        }
    }
    NoBouq+=(count/k);
    if (NoBouq>=m){
        return true;
    }return false;
}
    int minDays(vector<int>& bloomDay, int m, int k) {

        if((long)m*(long)k>bloomDay.size()){
            return -1;
        }
        int low=*min_element(bloomDay.begin(),bloomDay.end());
        int high=*max_element(bloomDay.begin(),bloomDay.end());
        while(low<=high){
          int mid=(low+high)/2;
          if(possible(bloomDay,mid,m,k)==true){
              high=mid-1;
          }else{
              low=mid+1;
          }

        }
        return low;
    }
};
